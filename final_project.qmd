---
title: "Final_Project"
format: pdf
editor: visual
editor_options: 
  chunk_output_type: console
---

## Packages

```{r}
library(tidyverse)
library(glmmTMB)
library(mlogit)
```

## import

```{r, message=F}
deployments <- read_csv("/home/guest/ENVIRON623/Data/deployments.csv")
cameras <- read_csv("/home/guest/ENVIRON623/Data/cameras.csv")
images <- read_csv("/home/guest/ENVIRON623/Data/images_2009198.csv")
projects <- read_csv("/home/guest/ENVIRON623/Data/projects.csv")
```

## wrangling

```{r}
images <- images |>
  mutate(
    region_name = str_to_lower(str_extract(deployment_id, "(?<=LT)[A-Za-z]+")),
    region = case_when(
      region_name == "sabie" ~ "s",
      region_name == "gran" ~ "g",
      TRUE ~ NA_character_
    ),
    hour = lubridate::hour(timestamp)
  )

images <- images |>
  mutate(deployment_site = sub(" .*", "", deployment_id))

images <- images |>
  filter(
    common_name != "White-tailed Deer",
    common_name != "No CV Result",
    common_name != "Domestic Cattle",
    species != "caballus",
    species != "catus",
    species != "American Bison",
    common_name != "Common Fallow Deer",
    common_name != "Eastern Rockhopper Penguin",
    common_name != "Domestic Dog",
    common_name != "Domestic Cat",
    common_name != "Domestic Goat",
    common_name != "Pampas Deer"
  )

images <- images |>
  mutate(genus = ifelse(family == "Elephantidae", "Loxodonta", genus),
         species = ifelse(family == "Elephantidae", "africana", species),
         genus = ifelse(family == "Giraffidae", "giraffa", genus),
         species = ifelse(family == "Giraffidae", "giraffa", species),
         species = ifelse(genus == "Papio", "ursinus", species),
         common_name = ifelse(common_name == "Kinda Baboon", "Chacma Baboon", common_name),
         genus = ifelse(family == "Hippopotamidae", "Hippopotamus", genus),
         species = ifelse(family == "Hippopotamidae", "amphibius", species),
         common_name = ifelse(species == "ursinus", "Chacma Baboon", common_name),
         common_name = ifelse(genus == "Loxodonta", "African Elephant", common_name),
         common_name = ifelse(family == "Giraffidae", "Giraffe", common_name)
         )

# sum(is.na(images$genus))

counts <- images |>
  count(deployment_id, common_name, name = "n")
```

```{r}
# species_seen <- images |>
#   distinct(deployment_site, common_name, hour) |>
#   mutate(common_name = str_replace_all(common_name, " ", "_"), seen = 1) |>
#   pivot_wider(
#     names_from = common_name,
#     values_from = seen,
#     values_fill = 0,
#     names_prefix = "seen_"
#   )
# 
# images <- images |>
#   left_join(species_seen, by = "deployment_site")
```

```{r}
species_seen <- images |>
  mutate(common_name = str_replace_all(common_name, " ", "_")) |>
  distinct(deployment_site, hour, common_name) |>
  mutate(seen = 1) |>
  pivot_wider(
    names_from = common_name,
    values_from = seen,
    values_fill = 0,
    names_prefix = "seen_"
  )

all_hours <- expand_grid(
  deployment_site = unique(images$deployment_site),
  hour = 0:23
)

species_seen_full <- all_hours |>
  left_join(species_seen, by = c("deployment_site", "hour")) |>
  mutate(across(starts_with("seen_"), ~replace_na(.x, 0)))

species_totals <- images |>
  mutate(common_name = str_replace_all(common_name, " ", "_")) |>
  count(common_name, name = "total") |>
  pivot_wider(
    names_from = common_name,
    values_from = total,
    names_prefix = "total_"
  )

images <- images |>
  left_join(species_seen_full, by = c("deployment_site", "hour")) |>
  mutate(across(starts_with("seen_"), ~replace_na(.x, 0))) |>
  mutate(dummy = 1) |>
  left_join(species_totals |> mutate(dummy = 1), by = "dummy") |>
  select(-dummy)
```

## EDA

```{r}
images_f <- images |>
  select(starts_with("total_")) |>
  pivot_longer(
    cols = everything(),
    names_to = "species",
    values_to = "total"
  ) |>
  distinct() |>
  mutate(species = str_remove(species, "^total_")) |>
  filter(total > 10) 

images_f |>
  ggplot(aes(x = fct_reorder(species, total), y = total)) +
  geom_col() +
  theme_bw() +
  coord_flip()
```

## Modeling

```{r}
# images <- images |> 
#   mutate(common_name = droplevels(common_name))

images <- images |>
  mutate(day = ifelse(hour <= 18 & hour >= 6, 1, 0))

df_m_data <- images |>
  filter(common_name %in% c("African Buffalo", "African Elephant", "Bushbuck",         
 "Chacma Baboon",     "Common Duiker",     "Common Warthog",   
 "Crested Francolin", "Giraffe" ,          "Greater Kudu" ,    
 "Hippopotamus",      "Impala"   ,         "Plains Zebra"  ,   
"Spotted Hyaena" ,   "Vervet Monkey" ,    "Waterbuck",        
 "Wild Boar" ))

df_m <- mlogit.data(df_m_data, choice = "common_name", shape = "wide")

m <- 
  mlogit(common_name ~ 1 | 
           region + day + seen_Impala,  
         data = df_m, reflevel = "Impala")



summary(m)


library(dotwhisker)
library(broom)
library(dplyr)
library(stringr)
results_df <- tidy(m)

#Regions Plot
regions <- results_df[16:30,]
regions <- regions %>% 
  mutate(conf.low = estimate - 1.96 * std.error,
    conf.high = estimate + 1.96 * std.error
  ) %>% 
  filter(!term %in% c("regions:Waterbuck", "regions:Plains Zebra","regions:Spotted Hyaena","regions:Common Duiker"))

regions$term <- str_remove(regions$term, "regions:")

ggplot(regions, aes(x = estimate, y = term)) +
  geom_point() +
  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.2) +
  theme_minimal() +
  labs(title = "Coefficients for Region Predictor",
       x = "Estimate",
       y = "Species")+
  theme(plot.title = element_text(hjust = 0.3)) +
  theme(axis.line = element_line(colour = "black"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    panel.background = element_blank()) +
  geom_vline(xintercept = 0, color = "grey") +
 geom_text(aes(label = round(estimate, 2)), vjust = -0.5, size = 3) 



#Time of Day Plot
time <- results_df[31:45,]
time <- time %>% 
  mutate(conf.low = estimate - 1.96 * std.error,
    conf.high = estimate + 1.96 * std.error
  ) %>% filter(!term %in% c("day:Waterbuck", "day:Plains Zebra","day:Crested Francolin","day:Vervet Monkey"))

time$term <- str_remove(time$term, "day:")

ggplot(time, aes(x = estimate, y = term)) +
  geom_point() +
  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.2) +
  theme_minimal() +
  labs(title = "Coefficients for Time of Day Predictor",
       x = "Estimate",
       y = "Species")+
  theme(plot.title = element_text(hjust = 0.3)) +
  theme(axis.line = element_line(colour = "black"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    panel.background = element_blank()) +
  geom_vline(xintercept = 0, color = "grey") +
  geom_text(aes(label = round(estimate, 2)), vjust = -0.5, size = 3) 

#Impala Seen Plot
impala <- results_df[46:60,]
impala <- impala %>% 
  mutate(conf.low = estimate - 1.96 * std.error,
    conf.high = estimate + 1.96 * std.error
  ) %>% filter(!term %in% c("seen_Impala:Wild Boar", "seen_Impala:Spotted Hyaena","seen_Impala:Impala", "seen_Impala:Plains Zebra","seen_Impala:Common Duiker", "seen_Impala:Spotted Hyaena","seen_Impala:Greater Kudu", "seen_Impala:Waterbuck"))

impala$term <- str_remove(impala$term, "seen_Impala:")

ggplot(impala, aes(x = estimate, y = term)) +
  geom_point() +
  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.2) +
  theme_minimal() +
  labs(title = "Coefficients for Impala Seen Predictor",
       x = "Estimate",
       y = "Species")+
  theme(plot.title = element_text(hjust = 0.3)) +
  theme(axis.line = element_line(colour = "black"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    panel.background = element_blank()) +
  geom_vline(xintercept = 0, color = "grey") +
  geom_text(aes(label = round(estimate, 2)), vjust = -0.5, size = 3) 


 #           seen_Impala + seen_Chacma_Baboon + seen_African_Buffalo +
 #           seen_Bushbuck + seen_Hippopotamus + seen_Common_Warthog +
 #           seen_Waterbuck + seen_Vervet_Monkey + seen_Giraffe +
 #           seen_Greater_Kudu + seen_Common_Duiker + seen_Wild_Boar +
 #           seen_Crested_Francolin + seen_Spotted_Hyaena + seen_Plains_Zebra +
 #           seen_Impala + seen_Chacma_Baboon + seen_African_Buffalo +
 #           seen_Bushbuck + seen_Hippopotamus + seen_Common_Warthog +
 #           seen_Waterbuck + seen_Vervet_Monkey + seen_Giraffe +
 #           seen_Greater_Kudu + seen_Common_Duiker + seen_Wild_Boar +
 #           seen_Crested_Francolin + seen_Spotted_Hyaena + seen_Plains_Zebra
```

## Data Saving

```{r}
saveRDS(images, file = here::here("Data", "images.rds"))
# saveRDS(full_stories_f, file = here::here("3 Clean data", "full_stories_f.rds"))

```
